-- MySQL dump 10.13  Distrib 8.0.19, for macos10.15 (x86_64)
--
-- Host: localhost    Database: react_blog
-- ------------------------------------------------------
-- Server version	8.0.19

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `admin_user`
--

DROP TABLE IF EXISTS `admin_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8 */;
CREATE TABLE `admin_user` (
  `userName` varchar(255) DEFAULT NULL,
  `password` varchar(255) DEFAULT NULL,
  `id` int NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `admin_user`
--

LOCK TABLES `admin_user` WRITE;
/*!40000 ALTER TABLE `admin_user` DISABLE KEYS */;
INSERT INTO `admin_user` VALUES ('zyj','123',1),('jwf','111',2),('1','1',3);
/*!40000 ALTER TABLE `admin_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `article`
--

DROP TABLE IF EXISTS `article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8 */;
CREATE TABLE `article` (
  `type_id` int NOT NULL,
  `title` varchar(255) NOT NULL,
  `article_content` text NOT NULL,
  `introduce` text,
  `addTime` int DEFAULT NULL,
  `view_count` int NOT NULL DEFAULT '0',
  `id` int NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article`
--

LOCK TABLES `article` WRITE;
/*!40000 ALTER TABLE `article` DISABLE KEYS */;
INSERT INTO `article` VALUES (1,'react hooks','<p>React的基础和全家桶都已经讲完了，是时候把所有知识都串联起来，作一个真实项目了。\n项目要用到的技术栈会很多，而且是真实项目，开发完成后，我会把自己的博客替换成新开发的，并且会把代码进行开源。\n项目前台会使用React服务端渲染，并且全部使用Hooks语法来完成。\n项目后台可能会使用Koa+mysql,后台将使用Koa的上层框架egg.js。</p>\n<p>本教程并没有课程大纲，一遍开发一遍讲述，但这样可以保证最真实的开发流程。如果你也想用React开发个人博客，那这个教程是你最好的选择。</p>\n</div><div class=\"detailed-content\"><a id=\"toc21\" href=\"#toc21\" class=\"anchor-fix\"><h2>p01：博客实战的课程介绍</h2></a>\n<iframe src=\"//player.bilibili.com/player.html?aid=68325396&cid=138913336&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" width=\"100%\"> </iframe>\n\n\n<a id=\"toc32\" href=\"#toc32\" class=\"anchor-fix\"><h3>技术胖的自我介绍</h3></a>\n<p>我相信看这个文章的大部分人，都是我的老朋友，但是也会有一些新朋友加入，所以我有必要作一下自我介绍。我是一个有12年开发经验的程序员，目前专注于前端开发领域，以前做过Java和php的开发。我从两年前开始录制免费视频，目标是10年录制1000集免费视频，写这篇文章时已经录制371集免费前端视频。</p>\n<p>视频每周都会更新3集左右，全部是下班回家后录制，所以没办法再快了。</p>\n<a id=\"toc33\" href=\"#toc33\" class=\"anchor-fix\"><h3>文章和视频的一些说明</h3></a>\n<p>注意：由于这套视频是实战视频，类似于开发全程的记录，所有代码都是手写，包括CSS代码和JSX代码，所以可能会显得甬长。这就类似一个有着丰富经验的程序前辈，手把手带着你作了一个完整项目。</p>\n<p>整个项目会包括三个部分:</p>\n<p><img src=\"http://newimg.jspang.com/blog_demo01.jpg\" alt=\"Bolg的三个结构\"></p>\n<p><strong>更新频率</strong></p>\n<p>这个文章和视频每周会更新三集左右，每集视频大概10-15分钟，太长了你看起来会比较累。最好的学习是方式是先看视频，然后跟着文章作一遍，这样可以保证你学习效率和质量。</p>\n<p><strong>一起学习</strong></p>\n<p>这套教程的文章和视频都是免费的，但不提供问题解答和讨论，如果你想参与，可以加入技术胖的小密圈。</p>\n<a id=\"toc34\" href=\"#toc34\" class=\"anchor-fix\"><h3>课程前置知识</h3></a>\n<p>你学习这套视频教程前，希望你把技术胖2019年录制的React全家桶视频先看一遍，这样可以更好的衔接本视频。</p>\n<p>技术胖的React全家桶视频（共84集）:</p>\n<p><a href=\"https://jspang.com/detailed?id=46\">1.React16免费视频教程（共28集) </a></p>\n<p><a href=\"https://jspang.com/detailed?id=48\">2.Redux免费视频教程（共24集）</a></p>\n<p><a href=\"https://jspang.com/detailed?id=49\">3.React Router 免费文字视频教程（共9集）</a></p>\n<p><a href=\"https://jspang.com/detailed?id=50\">4.React Hooks 免费视频教程(共11集)</a></p>\n<p><a href=\"https://jspang.com/detailed?id=51\">5.React服务端渲染框架Next.js入门(共12集)</a></p>\n<p>如果你没学过这些视频，看这套教程，可能会看不懂，以前讲过的知识点我会直接写出结果，不会作态度的知识介绍。</p>\n<p><img src=\"http://newimg.jspang.com/blog-demo01.jpg\" alt=\"React Demo\"></p>\n<a id=\"toc25\" href=\"#toc25\" class=\"anchor-fix\"><h2>p02：项目前端基础开发环境搭建</h2></a>\n<p>这套视频会分三个大的模块来讲，先完成博客的前端界面的制作，也就是上图说的第一个部分。前端主要完成功能就是用户的访问，文章列表和文章详情页面。因为Blog的前台需要SEO操作，所以我们一定会选用<code>Next.js</code>框架来辅助我们开发。然后减少CSS和各种组件的重复开发，选用阿里的<code>Ant Desgin</code>来作为UI交互库。定下这两个目标后，就可以搭建开发环境了。</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=68325396&cid=118845089&page=2\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" width=\"100%\"> </iframe>\n\n\n<a id=\"toc36\" href=\"#toc36\" class=\"anchor-fix\"><h3>用<code>create-next-app</code>快速创建项目</h3></a>\n<p><code>create-next-app</code>就是<code>Next.js</code>的脚手架工具，有了它可以直接一句命令就建立好项目目录和基本结构，省去了我们很多的麻烦。如果你没有使用过<code>create-next-app</code>,可以先进行全局安装，安装命令如下.</p>\n<pre><code>$ npm <span class=\"hljs-keyword\">install</span> -g <span class=\"hljs-keyword\">create</span>-<span class=\"hljs-keyword\">next</span>-app</code></pre><p>先创建一个总的目录，因为我们的项目会分为三个大模块，所以需要一个顶层目录。\n创建完成后，再进入目录。\n安装完成后，进入你要建立项目的位置，使用<code>npx</code>来进行安装。</p>\n<pre><code>$ <span class=\"hljs-string\">npx </span><span class=\"hljs-built_in\">create-next-app</span> <span class=\"hljs-string\">blog</span></code></pre><p>输入后按回车，就会自动给我们进行安装项目需要的依赖，Next相关的命令也会添加好。完成后可以使用<code>yarn dev</code>来测试一下。</p>\n<p>在浏览器中输入<code>http://localhost:3000/</code>,看到下面的内容，说明项目生产成功。</p>\n<p><img src=\"http://newimg.jspang.com/nextjs-01.png\" alt=\"create-next-app\"></p>\n<p>基本的前台项目结构就建立好了。</p>\n<a id=\"toc37\" href=\"#toc37\" class=\"anchor-fix\"><h3>建立博客首页</h3></a>\n<p>用<code>create-next-app</code>建立好后，主页是默认的，所以我们要删除一下默认的文件和代码。把首页改成下面的代码。</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\'react\'</span>\n<span class=\"hljs-keyword\">import</span> Head <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\'next/head\'</span>\n<span class=\"hljs-keyword\">const</span> Home = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> (\n  <span class=\"xml\"><span class=\"hljs-tag\">&lt;&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Head</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Home<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Head</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;/&gt;</span>\n)\nexport default Home</span></code></pre>\n<p>这样基本的前台结构就算搭建完成了，但是我们还要使用<code>Ant Desgin</code>轮子来写我们的UI部分。</p>\n<a id=\"toc38\" href=\"#toc38\" class=\"anchor-fix\"><h3>让<code>Next</code>支持CSS文件</h3></a>\n<p>先用<code>yarn</code>命令来安装<code>@zeit/next-css</code>包，它的主要功能就是让<code>Next.js</code>可以加载<code>CSS</code>文件，有了这个包才可以进行配置。</p>\n<pre><code><span class=\"hljs-selector-tag\">yarn</span> <span class=\"hljs-selector-tag\">add</span> @<span class=\"hljs-keyword\">zeit</span>/<span class=\"hljs-keyword\">next</span>-<span class=\"hljs-keyword\">css</span></code></pre><p>包下载完成后，在<code>blog</code>根目录下，新建一个<code>next.config.js</code>文件。这个就是<code>Next.js</code>的总配置文件。写入下面的代码:</p>\n<pre><code class=\"language-js\"><span class=\"hljs-keyword\">const</span> withCss = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">\'@zeit/next-css\'</span>)\n\n<span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-built_in\">require</span> !== <span class=\"hljs-string\">\'undefined\'</span>){\n    <span class=\"hljs-built_in\">require</span>.extensions[<span class=\"hljs-string\">\'.css\'</span>]=<span class=\"hljs-function\"><span class=\"hljs-params\">file</span>=&gt;</span>{}\n}\n\n<span class=\"hljs-built_in\">module</span>.exports = withCss({})</code></pre>\n<p>这样我们的<code>Next.js</code>就支持CSS文件了。</p>\n<a id=\"toc39\" href=\"#toc39\" class=\"anchor-fix\"><h3>按需加载<code>Ant Design</code></h3></a>\n<p>接下来用yarn来安装<code>antd</code>，在命令行里输入：</p>\n<pre><code>yarn <span class=\"hljs-keyword\">add</span><span class=\"bash\"> antd </span></code></pre><p>然后再安装一下<code>babel-plugin-import</code>，命令如下：</p>\n<pre><code>yarn <span class=\"hljs-keyword\">add</span><span class=\"bash\"> babel-plugin-import</span></code></pre><p>安装完成后，在项目根目录建立<code>.babelrc</code>文件，然后写入如下配置文件。</p>\n<pre><code class=\"language-json\">{\n    <span class=\"hljs-attr\">\"presets\"</span>:[<span class=\"hljs-string\">\"next/babel\"</span>],  <span class=\"hljs-comment\">//Next.js的总配置文件，相当于继承了它本身的所有配置</span>\n    <span class=\"hljs-attr\">\"plugins\"</span>:[     <span class=\"hljs-comment\">//增加新的插件，这个插件就是让antd可以按需引入，包括CSS</span>\n        [\n            <span class=\"hljs-string\">\"import\"</span>,\n            {\n                <span class=\"hljs-attr\">\"libraryName\"</span>:<span class=\"hljs-string\">\"antd\"</span>\n            }\n        ]\n    ]\n}\n</code></pre>\n<p>在pages目录下，新建一个<code>_app.js</code>文件，然后把CSS进行全局引入.</p>\n<pre><code class=\"language-js\">import App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\'next/app\'</span>\n\nimport <span class=\"hljs-string\">\'antd/dist/antd.css\'</span>\n\n<span class=\"hljs-builtin-name\">export</span><span class=\"hljs-built_in\"> default </span>App</code></pre>\n<p>这样<code>Ant Design</code>就可以按需引入了。现在<code>index.js</code>加入一个按钮，看看是否可以正常使用,代码如下。\n如果能正常使用，我们的基本环境就已经建立完成了。</p>','element3.style.height = (h3 * 2) + \'px\n```\n### window.requestAnimationFrame\n表示下一次浏览器重绘的时候执行，可以使用这个防止布局抖动\n```\n// 读\nvar h1 = element1.clientHeight\n// 写\nrequestAnimationFrame(() => {\n   element1.style.height = (h1 * 2) + \'px\'\n})\n\n// 读\nvar h2 = element2.clientHeight\n// 写\nrequestAnimationFrame(() => {\n   element2.style.height = (h2 * 2) + \'px\'\n})\n\n// 读\nvar h3 = element3.clientHeight\n// 写\nrequestAnimationFrame(() => {\n   element3.style.height = (h3 * 2) + \'px\'\n})\n',123123,0,1),(2,'前端环境的搭建','## 岗位管理\n\n## 获取组织树（修改）\n\n#### 请求地址\n\nget http://localhost:8080/linkid/api/aggregate/organization/all/get\n\n\n#### 返回数据\n\n  ```\n{\n	code:200,\n	data: [\n{\n    \"title\" : \"行政组织\",\n    \"code\" : \"ewe\",\n    \"key\" : \"RJXZZZ\",\n    \"isLeaf\" : true,\n    \"category\" : \"0\",\n    \"children\" : null,\n    \"status\" : \"0\",\n    \"official\" : true,\n    \"departmentId\" : null,\n    \"isBuilding\":true, // 新加属性 组织是否正在创建\n    \"order\" : null，\n    definitionMode:\'\' // 新加字段 组织定义方式\'rule\' 或者\'manual\'\n  }]\n}\n\n  ```\n\n### 根据身份类别数组获取用户数据树（新增）\n\n#### 请求地址\n\npost \n\n#### 请求数据\n\n```\n{\n	identityList:[\'身份类key\', ‘身份类别key’]\n}\n```\n\n#### 返回数据\n\n```\n// \n{\n  \"code\" : 200,\n  \"message\" : \"OK\",\n  \"data\" : [ \n     [\n      \"key\" : \"id\", // 身份类别key\n    \"title\" : \"学生\",\n    code:\'01\',\n    \"number\" : \"TB01\",\n    \"parentId\" : null,\n    \"desc\" : null,\n    disabled:true, // 身份类别节点以及数据项有chi l dren内容字段加上diasbled：true\n    \"children\" : [ {\n      \"ke y\" : \"5c4fdc8a8c21aa41dca74202\",\n      \"title\" : \"标准人员数据类\",\n      \"number\" : \"TB0100\",\n      \"parentId\" : null,\n      \"desc\" : null,\n      \"children\" : [ ],\n      \"isInherit\" : null\n    } ],\n    \"isInherit\" : null\n  }] ,[\n  {\n    \"ke y\" : \"id\",\n    \"title\" : \"教师\",\n    \"code\":\'02\',\n    \"number\" : \"TB01\",\n        disabled:true,\n\n    \"parentId\" : null,\n    \"desc\" : null,\n    \"children\" : [ {\n      \"key\" : \"5c4fdc8a8c21aa41dca74202\",\n      \"title\" : \"标准人员数据类\",\n      \"number\" : \"TB0100\",\n      \"parentId\" : null,\n      \"desc\" : null,\n      \"children\" : [ ],\n      \"isInherit\" : null\n    } ],\n    \"isInherit\" : null\n  }\n  ]\n   ]\n}\n```\n\n### 根据身份类别数组获取常用数据项（新增）\n\n### 请求地址\n\n```\nhttp://localhost:8080/linkid/api/dictconfig/get\n```\n\n#### 请求参数\n\n```\n[\'身份类别key\',\'身份类别key\',\'身份类别key\',\"field.stander.common.01\"]\n```\n\n#### 返回\n\n```\n{\n  \"code\" : 200,\n  \"message\" : \"OK\",\n  \"data\" : [ \n  [\n  {\n    \"key\" : \"5c4fdc8a8c21aa41dca741d7\", // 身份类别key\n    \"title\" : \"学生\",\n    “code\":\'23\'，\n    \"number\" : \"TB01\",\n    \"parentId\" : null,\n    \"desc\" : null,\n    \"children\" : [ {\n    \"schoolId\" : \"5bed24751001ea0715610d6f\",\n    \"number\" : \"TB010092\",\n    \"name\" : \"SFLBMC\",\n    \"cnshortname\" : \"身份类别名称\",\n    \"userPropertyId\" : \"5bd559e4048a2f376b34d738\",\n    \"isUnique\" : false,\n    \"isInherit\" : false,\n    \"isSupply\" : false,\n    \"globalLifeCycle\" : false\n  } ],\n    \"isInherit\" : null\n  	}\n  ],\n  [\n  {\n    \"key\" : \"5c4fdc8a8c21aa41dca741d7\",\n    \"title\" : \"老师\",\n    “code\":03\n    \"number\" : \"TB01\",\n    \"parentId\" : null,\n    \"desc\" : null,\n    \"children\" : [ {\n      {\n    \"schoolId\" : \"5bed24751001ea0715610d6f\",\n    \"number\" : \"TB010092\",\n    \"name\" : \"SFLBMC\",\n    \"cnshortname\" : \"身份类别名称\",\n    \"userPropertyId\" : \"5bd559e4048a2f376b34d738\",\n    \"isUnique\" : false,\n    \"isInherit\" : false,\n    \"isSupply\" : false,\n    \"globalLifeCycle\" : false\n  } ],\n    \"isInherit\" : null\n  	}]]\n  	}\n```\n\n### 根据身份类别数组搜索常用数据项（新增）\n\n#### 请求地址\n\n```\nRequest URL: http://localhost:8080/linkid/api/aggregate/identitycategory/identitystandard/findbyname\n```\n\n#### 请求参数\n\n```\n{\n	name:\'ss\',\n	identityKeys: [\n	\'key1\',key2\n	]\n}\n```\n\n#### 返回数据\n\n```\n{\n  \"code\" : 200,\n  \"message\" : \"OK\",\n  \"data\" : [ {\n    identityData: {\n  	key:\'key\',\n  	code:22,\n  	title:\'学生\'\n  },\n  dataCategory: {\n    \"5c4fdc8a8c21aa41dca74202\" : [ {\n      \"schoolId\" : \"5c4fd4528c21aa41dca73e5b\",\n      \"number\" : \"TB010002\",\n      \"name\" : \"XMPY\",\n      \"cnshortname\" : \"姓名拼音\",\n      \"type\" : \"\",\n      \"userPropertyId\" : \"5c4fd4518c21aa41dca7372d\",\n      \"isUnique\" : false,\n      \"inputType\" : \"T001\",\n      \"isInherit\" : false,\n      \"isSupply\" : true,\n      \"globalLifeCycle\" : false\n    }, {\n      \"schoolId\" : \"5c4fd4528c21aa41dca73e5a\",\n      \"constraint\" : \"REQUIRED\",\n      \"explain\" : \"例：张振华；买买提明• 阿不都 热 依木\",\n      \"valueSpace\" : \"\",\n      \"number\" : \"TB010001\",\n      \"name\" : \"XM\",\n      \"cnshortname\" : \"姓名\",\n      \"type\" : \"\",\n      \"userPropertyId\" : \"5bd44318048a2f376b2e6dab\",\n      \"isUnique\" : false,\n      \"inputType\" : \"T001\",\n      \"isInherit\" : false,\n      \"isSupply\" : true,\n      \"globalLifeCycle\" : false\n    } ],\n    \"5c4fdc8a8c21aa41dca74267\" : [ {\n      \"schoolId\" : \"5c4fd4528c21aa41dca73c79\",\n      \"constraint\" : \"\",\n      \"explain\" : \"\",\n      \"valueSpace\" : \"\",\n      \"referenceNumber\" : \"TB010001\",\n      \"number\" : \"JG050202\",\n      \"name\" : \"YPZXM\",\n      \"cnshortname\" : \"应聘者姓名\",\n      \"type\" : \"\",\n      \"userPropertyId\" : \"5c4fd4518c21aa41dca7354b\",\n      \"isUnique\" : false,\n      \"isInherit\" : false,\n      \"isSupply\" : true,\n      \"globalLifeCycle\" : false\n    } ]\n  }\n  }\n  }\n\n  ]\n}\n```\n\n### 预览规则组织树（新增）\n\n#### 请求地址\n\n#### 参数\n\n```\n{\n\n	orgInfo: {\n	name:\'组织\',\n	},\n		identityCategoryRange:[\n	{\n		 	key: \'string\';\n  			title: \'string\';\n  			code?: 22;\n\n	},{\n			 	key: \'string\';\n  			title: \'string\';\n  			code?: 22;\n	}	],\n	dataSource: [\n	{\n			dataItem: {\n			cnshortname: \'string\';\n  name: \'string\';\n  schoolId: \'sd\';\n  number:1;\n				userPropertyId:\'s\'\n			},\n			dataCategory: {\n 			 id: \'sdf\';\n  			name: \'name\';\n 			 number: 11;\n			},\n			identityCategory: {\n			 	key: \'string\';\n  			title: \'string\';\n  			code?: 22;\n  			parentKeys:[\'sdf\']\n			}\n		,\n		{\n			dataItem: {\n				userPropertyId:\'s\'\n			},\n			postInfo:[\n		{\n			dataItem: {\n				userPropertyId:\'s\'\n			},\n			dataCategory: {\n 			 id: \'sdf\';\n  			name: \'name\';\n 			 number: 11;\n			},\n			identityCategory: {\n			 	key: \'string\';\n  			title: \'string\';\n  			code?: 22;\n  			parentKeys:[\'sdf\']\n			}\n		\n			]\n		}\n	]\n}\n```\n\n#### 返回结果\n\n```\n{\n  \"code\" : 200,\n  \"message\" : \"OK\",\n  \"data\" : [ {\n    \"title\" : \"成都大学\",\n    \"code\" : \"ewe\",\n    \"key\" : \"RJXZZZ\",\n    \"isLeaf\" : false,\n    \"category\" : \"0\", // 后端需要注意一下，这里category用来区分节点类别（部门岗位组织）\n    \"children\" : [ {\n      \"title\" : \"sdfs\",\n      \"code\" : \"sdfsd\",\n      \"key\" : \"R5e4e3debf86ee90006d7d3dc\",\n      \"isLeaf\" : true,\n      \"category\" : \"1\",\n      \"children\" : null,\n      \"status\" : \"0\",\n      \"official\" : true,\n      \"departmentId\" : null,\n      dataItem: { // 用于ta b le展示用户扩展数据\n     			 desc: null\n				id: null\n			name: \"SFLBMC\"\n			scene: null\n					type: \"string\"\n					cnshortname:\'sss\'\n			userPropertyId: \"5bd559e4048a2f376b34d738\"\n				value: null\n\n      }\n      \"order\" : [ ]\n    }, {\n      \"title\" : \"sds\",\n      \"code\" : \"dfs\",\n      \"key\" : \"R5e4e3e07f86ee90006d7d3dd\",\n      \"isLeaf\" : true,\n      \"category\" : \"1\",\n      \"children\" : null,\n      \"status\" : \"0\",\n      \"official\" : true,\n      \"departmentId\" : null,\n      \"order\" : [ ]\n    } ],\n    \"status\" : \"0\",\n    \"official\" : true,\n    \"departmentId\" : null,\n    \"order\" : [ \"R5e4e3debf86ee90006d7d3dc\", \"R5e4e3e07f86ee90006d7d3dd\" ]\n  } ]\n}\n```\n\n### 规则组织获取预览人员名单（新增）\n\n#### 请求地址\n\n#### 请求参数\n\n```\n{\n\"currentPage\":1,\n\"pageSize\":5,\n\"requestParam\":{\n\n	identityCodes:[1,2],\n	\"dataItemList\":[\n	{\n	key:\"R5e4102d9ef3ca40001f8d40e\" \n	value:\'学院1\' // searchAll为true时没有value\n	}\n	]，\n	searchAll：true // 是否查询整颗组织树数据项\n	}\n}\n```\n\n\n\n#### 返回结果\n\n```\n{\n  \"code\" : 200,\n  \"message\" : \"OK\",\n  \"data\" : {\n    \"totalElements\" : 5,\n    \"totalPages\" : 0,\n    \"currentPage\" : 1,\n    \"pageSize\" : 5,\n    \"content\" : [ {\n    \"objectId\" : \"5e573069afeecb00063c243a\",\n    \"xgh\" : \"hhqtest\",\n    \"name\" : \"hhqtest\",\n    departmentId:\'部门id\'，\n    departmentName:\'部门\',\n    identityCategoryCode:01,\n    identityCategoryName:\'学生\',\n    //额外数据项\n  } ]\n  }\n}\n```\n\n### 保存规则定义组织（新增）\n\n#### 请求地址\n\n#### 参数\n\n```\n{\n	orgInfo: {\n		id:\'\', // 有就是更新没有就是添加\n	  address: \'string\';\n  category: \'string\';\n  contact: \'string\'\n  duty: \'string\';\n	name:\'组织\',\n	code:\'cc\',\n	    definitionMode:\'manual\' // 新加字段 组织定义方式\'rule\' 或者\'manual\'	},\n	identityCategoryRange:[\n	{\n		 	key: \'string\';\n  			title: \'string\';\n  			code?: 22;\n\n	},{\n			 	key: \'string\';\n  			title: \'string\';\n  			code?: 22;\n	}	],\n	dataSource: [\n		{\n		dataItem: {\n			cnshortname: \'string\';\n  name: \'string\';\n  schoolId: \'sd\';\n  number:1;\n				userPropertyId:\'s\'\n			},\n			dataCategory: {\n 			 id: \'sdf\';\n  			name: \'name\';\n 			 number: 11;\n			},\n			identityCategory: {\n			 	key: \'string\';\n  			title: \'string\';\n  			code?: 22;\n  			parentKeys:[\'sdf\']\n			}\n		},\n		{\n			dataItem: {\n				userPropertyId:\'s\'\n			},\n			postInfo:[\n	{\n			dataItem: {\n				userPropertyId:\'s\'\n			},\n			dataCategory: {\n 			 id: \'sdf\';\n  			name: \'name\';\n 			 number: 11;\n			},\n			identityCategory: {\n			 	key: \'string\';\n  			title: \'string\';\n  			code?: 22;\n  			parentKeys:[\'sdf\']\n			}\n			]\n		}\n	]\n}\n```\n\n### 获取组织详细信息（添加）\n\n####请求地址\n\n #### 返回结果\n\n```\n{\n	orgInfo: {\n		id:\'\', \n	  address: \'string\';\n  category: \'string\';\n  contact: \'string\'\n  duty: \'string\';\n	name:\'组织\',\n	code:\'cc\',\n	    definitionMode:\'manual\' // 新加字段 组织定义方式\'rule\' 或者\'manual\'	},\n	identityCategoryRange:[\n	{\n		 	key: \'string\';\n  			title: \'string\';\n  			code?: 22;\n\n	},{\n			 	key: \'string\';\n  			title: \'string\';\n  			code?: 22;\n	}	],\n	dataSource: [\n		{\n		dataItem: {\n			cnshortname: \'string\';\n  name: \'string\';\n  schoolId: \'sd\';\n  number:1;\n				userPropertyId:\'s\'\n			},\n			dataCategory: {\n 			 id: \'sdf\';\n  			name: \'name\';\n 			 number: 11;\n			},\n			identityCategory: {\n			 	key: \'string\';\n  			title: \'string\';\n  			code?: 22;\n  			parentKeys:[\'sdf\']\n			}\n		},\n		{\n			dataItem: {\n				userPropertyId:\'s\'\n			},\n			postInfo:[\n	{\n			dataItem: {\n				userPropertyId:\'s\'\n			},\n			dataCategory: {\n 			 id: \'sdf\';\n  			name: \'name\';\n 			 number: 11;\n			},\n			identityCategory: {\n			 	key: \'string\';\n  			title: \'string\';\n  			code?: 22;\n  			parentKeys:[\'sdf\']\n			}\n			]\n		}\n	]\n}\n```\n\n### 组织树接口（修改）\n\n#### 请求地址\n\nRequest URL: http://localhost:8080/linkid/api/aggregate/department/tree/get/RJXZZZ?onlyDepartment=true&self=true&1583484617963\n\n```\n{\n  \"code\" : 200,\n  \"message\" : \"OK\",\n  \"data\" : [ {\n    \"title\" : \"行政组织\",\n    \"code\" : \"ewe\",\n    \"key\" : \"RJXZZZ\",\n    \"isLeaf\" : false,\n    \"category\" : \"0\",\n    \"children\" : [ {\n      \"title\" : \"sdfs\",\n      \"code\" : \"sdfsd\",\n      \"key\" : \"R5e4e3debf86ee90006d7d3dc\",\n      \"isLeaf\" : true,\n      \"category\" : \"1\",\n          definitionMode:\'\' // 新加字段 组织定义方式\'rule\' 或者\'manual\',用以区分这颗组织树的组织是规则定义的还是手动定义的\n      \"children\" : null,\n      \"status\" : \"0\",\n      \"official\" : true,\n      \"departmentId\" : null,\n      \"order\" : [ ]\n    }, {\n      \"title\" : \"sds\",\n      \"code\" : \"dfs\",\n      \"key\" : \"R5e4e3e07f86ee90006d7d3dd\",\n      \"isLeaf\" : true,\n      \"category\" : \"1\",\n      \"children\" : null,\n      \"status\" : \"0\",\n      \"official\" : true,\n      \"departmentId\" : null,\n      \"order\" : [ ]\n    }, {\n      \"title\" : \"zzz\",\n      \"code\" : \"zzz\",\n      \"key\" : \"R5e6dd9eb45d6a40006f2eb51\",\n      \"isLeaf\" : false,\n      \"category\" : \"1\",\n      \"children\" : [ {\n        \"title\" : \"zzza\",\n        \"code\" : \"zzza\",\n        \"key\" : \"R5e6dda3845d6a40006f2eb56\",\n        \"isLeaf\" : true,\n        \"category\" : \"1\",\n        \"children\" : null,\n        \"status\" : \"0\",\n        \"official\" : true,\n        \"departmentId\" : null,\n        \"order\" : [ ]\n      }, {\n        \"title\" : \"zzzb\",\n        \"code\" : \"zzzb\",\n        \"key\" : \"R5e6dda4f45d6a40006f2eb5b\",\n        \"isLeaf\" : true,\n        \"category\" : \"1\",\n        \"children\" : null,\n        \"status\" : \"0\",\n        \"official\" : true,\n        \"departmentId\" : null,\n        \"order\" : [ ]\n      } ],\n      \"status\" : \"0\",\n      \"official\" : true,\n      \"departmentId\" : null,\n      \"order\" : [ \"R5e6dda3845d6a40006f2eb56\", \"R5e6dda4f45d6a40006f2eb5b\" ]\n    } ],\n    \"status\" : \"0\",\n    \"official\" : true,\n    \"departmentId\" : null,\n    \"order\" : [ \"R5e4e3debf86ee90006d7d3dc\", \"R5e4e3e07f86ee90006d7d3dd\", \"R5e6dd9eb45d6a40006f2eb51\" ]\n  } ]\n}\n```\n\n## 后端评估是否需要修改\n\n### 获取组织下的部门情况（修改）\n\n#### 请求地址\n\nRequest URL: http://localhost:8080/linkid/api/aggregate/organization/department/get/withcategory/RJXZZZ?1583480327477\n\n后端评估下规则组织获取部门是否可以重用\n\n### 删除组织（修改）\n\n#### 请求地址\n\nRequest URL: http://localhost:8080/linkid/api/aggregate/organization/delete/R5e41239c5cee2e000102b807\n\n### 获取部门岗位信息（修改）\n\n#### 请求地址\n\nRequest URL: http://localhost:8080/linkid/api/aggregate/post/findAllPostByOrganizationId/R5e4e3debf86ee90006d7d3dc/true?1583484618112 正式岗位\nRequest URL: http://localhost:8080/linkid/api/aggregate/post/findAllPostByOrganizationId/R5e4e3debf86ee90006d7d3dc/false?1583484618116 虚拟岗位\n\n\n### 获取部门人员数据（修改）\n\n#### 请求地址\n\nRequest URL: http://localhost:8080/linkid/api/aggregate/users/findUsersByOrganizationId/R5e4e3debf86ee90006d7d3dc?1583484618121\n\n\n\n### 删除部门下的人 （修改）\n\n删除人员在部门下的全部岗位信息\n\n#### 请求地址\n\nPost api/aggregate/users/deleteOrganizationPost\n\n#### 请求数据\n\n  ```\n{\n	objectId: \'ss\',\n	departmentId: \'ss\' // 岗位的所属部门id\n}\n\n  ```\n\n\n### 获取部门下正式岗位树信息（修改）\n\n#### 请求地址\n\n GET api/aggregate/post/findAllPostByOrganizationId/{organizationId}/true\n\n#### 返回数据\n\n  ```\n{\n	code:200,\n	data: [\n	{\n		key: 1, // 岗位id\n		title: 岗位s1，\n		category: \'岗位类别\',\n		level: \'岗位等级\',\n		incumbent:[\n		  \n		   //任职人员信息与岗位部门树数据一致\n		],\n		children: [{\n		key:22,\n		title:\'sss\'\n		}]\n	}，\n	{\n	key: 2,\n	title： ‘岗位2’,\n	children: [\n		{\n			key: 3,\n			title: \'岗位2.1\'\n		}	\n	]\n	},{\n	key:4,\n	title: \'岗位1\'，\n	}\n]\n}\n  ```\n\n### 获取部门下虚拟岗位树信息（修改）\n\n#### 请求地址\n\nGET api/aggregate/post/findAllPostByOrganizationId/{organizationId}/false\n\n#### 返回数据\n\n  ```\n{\n	code:200,\n	data: [\n	{\n		key: 1, // 岗位id\n		title: 岗位s1，\n		category: \'岗位类别\',\n		level: \'岗位等级\',\n		incumbent:[\n	\n		   //任职人员信息与岗位部门树数据一致\n		],\n		children: [{\n		key:22,\n		title:\'sss\'\n		}]\n	}，\n	{\n	key: 2,\n	title： ‘岗位2’,\n	children: [\n		{\n			key: 3,\n			title: \'岗位2.1\'\n		}	\n	]\n	},{\n	key:4,\n	title: \'岗位1\'，\n	}\n]\n}\n  ```\n\n### 获取部门下人员信息（修改）\n\n#### 请求地址\n\nGET api/aggregate/users/findUsersByOrganizationId/{organizationId}\n\n#### 返回数据\n\n  ```\n{\n	code:200,\n	data: [\n	{\n	objectId:\'s\',\n	userId: \'ss\',\n	name: \'ss\',\n	postInfo: [\n	{\n	title:\'岗位名称\'\n	}\n	]\n	}\n]\n}\n  ```\n\n\n\n### 更新部门下的岗位树（修改）\n\n#### 请求地址\n\nPost /api/aggregate/post/updatePostOrganization\n\n#### 请求数据\n\n  ```\n{\n	postIdList: [\'ss\'],\n	departmentId: \'ss\',\n	isOfficial: true // 判断更新部门下的正式还是虚拟岗位\n}\n\n  ```\n\n### 部门关联任职人员（修改）\n\n#### 请求地址\n\nPost /api/aggregate/users/updateUserOrganizationPost\n\n#### 请求数据\n\n  ```\n{\n	postId: \'ss\', // 有postid就挂在岗位上，没有就挂在部门上\n	departmentId:\'ss\',\n	incumbent:[\n	\'objectId\',\n	]\n}\n\n  ```\n\n### 部门关联任职人员（修改）\n\n#### 请求地址\n\nPost /api/aggregate/users/updateUserOrganizationPost\n\n#### 请求数据\n\n  ```\n{\n	postId: \'ss\', // 有postid就挂在岗位上，没有就挂在部门上\n	departmentId:\'ss\',\n	incumbent:[\n	\'objectId\',\n	]\n}\n  ```\n\n### 调整位置（修改）\n\n#### 请求地址\n\n```\n\'/api/aggregate/department/weight/swap\',\n\'/api/aggregate/post/weight/swap\',\n\'/api/aggregate/jobrole/weight/swap\',\n```','## 布局抖动\n浏览器会记录你是否对页面元素进行修改，然后统一一起重排，但是如果你在对dom修改过后重新对页面进行获取相关dom元素值，那么就会迫使页面重新进行布局。\n### 例子\n```\nvar h1 = element1.clientHeight\nelement1.style.height = (h1 * 2) + \'px\'\n\nvar h2 = element2.clientHeight\nelement2.style.height = (h2 * 2) + \'px\'\n\nvar h3 = element3.clientHeight\nelement3.style.height = (h3 * 2) + \'px\'\n```\n可以统一获取统一设置\n```\nvar h1 = element1.clientHeight\nvar h2 = element2.clientHeight\nvar h3 = element3.clientHeight\n\nelement1.style.height = (h1 * 2) + \'px\'\nelement2.style.height = (h2 * 2) + \'px\'\nelement3.style.height = (h3 * 2) + \'px\n```\n### window.requestAnimationFrame\n表示下一次浏览器重绘的时候执行，可以使用这个防止布局抖动\n```\n// 读\nvar h1 = element1.clientHeight\n// 写\nrequestAnimationFrame(() => {\n   element1.style.height = (h1 * 2) + \'px\'\n})\n\n// 读\nvar h2 = element2.clientHeight\n// 写\nrequestAnimationFrame(() => {\n   element2.style.height = (h2 * 2) + \'px\'\n})\n\n// 读\nvar h3 = element3.clientHeight\n// 写\nrequestAnimationFrame(() => {\n   element3.style.height = (h3 * 2) + \'px\'\n})\n```\n####requestAnimationFrame的pollfill\n```\nif (!window.requestAnimationFrame) window.requestAnimationFrame = (callback, element) => {\n   const id = window.setTimeout(() => {\n       callback()\n   }, 1000 / 60)\n   return id\n}\nif (!window.cancelAnimationFrame) window.cancelAnimationFrame = id => {\n   clearTimeout(id)\n}\n\n```\n重绘一般1秒钟60次\n## 事件委托\n用event.target区分\n## 节流与防抖\n节流与防抖不会减少事件的触发，而是减少事件触发时回调函数的执行次数。\n###防抖\n抖动表示短时间内多次调用，防抖表示将短时间内多次执行合并成一次，只触发一次回调函数\n```\nexport const debounce = function (func, wait) {\n    let timer = null;\n    return function (...args) {\n        const context = this;\n        timer && clearTimeout(timer); // 如果之前有定时器在等待，就撤销调用，每次定时器都保存最新的调用\n        timer = setTimeout(() => {\n            timer = null;\n            func.apply(context, args);\n        }, wait);\n    }\n};\n```\n### 节流\n表示将短时间内函数调用以一个固定频率执行\n```\nexport const throttle = function (func, wait) {\n    let startTime = 0;\n\n    return function (...args) {\n        const context = this;\n        const handTime = +new Date(); // 小技巧等于调用getTime方法\n\n        if (handTime - startTime > wait) {\n            func.apply(context, args);\n            startTime = handTime;\n        }\n\n    }\n};\n```',232323,10,2),(2,'leetcode','### 20 有效的括号\n[地址](https://leetcode-cn.com/problems/valid-parentheses/)\n\n主要理解出现右括号出现时候要出栈匹配元素做判断，还有一个注意点在于最后要注意一下判断stack有没有清空\n### 150 逆波兰表达式\n[地址](https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/)\n最主要注意除法的取整方法和两个操作数顺序，其他很简单\n### 71 unix路径优化(难题)\n[地址](https://leetcode-cn.com/problems/simplify-path/submissions/)\n其实这个题目很简单关键要想到用/作为切分点，不然很难计算，测试用例太多不规范的用例\n## 递归stack的使用\n### flat数组\n[地址](https://leetcode-cn.com/problems/flatten-nested-list-iterator/)\n利用stack实现这个功能很简单\n## 队列与树\n### 二叉树层序遍历\n[地址](https://leetcode-cn.com/problems/binary-tree-level-order-traversal/)\n解法很简单，但是要考虑减少不必要的变量让代码更简洁\n### 二叉树的右视图\n[地址](https://leetcode-cn.com/problems/binary-tree-right-side-view/)\n很简单层序遍历时候只输出一层最后一个\n## 图找最短路径\n###  完全平方数(难题)\n[地址](https://leetcode-cn.com/problems/perfect-squares/)\n\n1.关键是这种问题要能想到用图找最短路径方法来解决\n2.用for循环遍历找可以组成这个数的平方数的思想也要掌握\n\n### 127 单词接龙\n[地址](https://leetcode-cn.com/problems/word-ladder/)\n\n和完全平方数一个解法，添加过的单词可以不再添加队列\n### 126 单词接龙2（难题）\n[地址](https://leetcode-cn.com/problems/word-ladder-ii/)\n\n难点：\n1. 加入set的时候需要判断一下同样一个节点可能处于同一层级中不同节点的子节点，判断不好会缺少最短路径\n2. 缓存的set要判断好不然缓存如果处理不好会时间超时\n3. 多次使用的set要注意创建时间，不要重复创建，数组长的时候创建set很耗时\n','刷题',333,10,3),(3,'sdfsfsdf','\n完全二叉树：除了最后一行所有层都是满的\n最后一层要从左边开始\n\n第一个非叶子节点 标记是节点个数除以2（索引从1开始） \n\n \n删除节点\n找到右子树最小的节点作为中间点\n\n图\n两种表示方法\n\n \n\n \n \n ','学习数据结构',234234,0,4),(1,'4534','45sdfs','45fsdf',-28800,0,5),(1,'sdsdfs','sdf','sdf',1587484800,1099,6);
/*!40000 ALTER TABLE `article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `type`
--

DROP TABLE IF EXISTS `type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8 */;
CREATE TABLE `type` (
  `typeName` varchar(255) NOT NULL,
  `orderNumber` int NOT NULL,
  `id` int NOT NULL AUTO_INCREMENT,
  `icon` int DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `type`
--

LOCK TABLES `type` WRITE;
/*!40000 ALTER TABLE `type` DISABLE KEYS */;
INSERT INTO `type` VALUES ('前端基础',1,1,1),('算法',2,2,2),('前端工具',3,3,1);
/*!40000 ALTER TABLE `type` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-04-24 11:11:57
